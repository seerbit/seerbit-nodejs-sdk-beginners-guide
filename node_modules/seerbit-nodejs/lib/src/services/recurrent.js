"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const getJsonResponse_1 = __importDefault(require("../helpers/getJsonResponse"));
const createSubscription_1 = __importDefault(require("./resource/recurrent/createSubscription"));
const chargeSubscription_1 = __importDefault(require("./resource/recurrent/chargeSubscription"));
const updateSubscription_1 = __importDefault(require("./resource/recurrent/updateSubscription"));
const getSubscriptions_1 = __importDefault(require("./resource/recurrent/getSubscriptions"));
const checkSubscriptionStatus_1 = __importDefault(require("./resource/recurrent/checkSubscriptionStatus"));
const service_1 = __importDefault(require("../service"));
class Recurrent extends service_1.default {
    constructor(client) {
        super(client);
        this._createSubscription = new createSubscription_1.default(this);
        this._chargeSubscription = new chargeSubscription_1.default(this);
        this._updateSubscription = new updateSubscription_1.default(this);
        this._getSubscriptions = new getSubscriptions_1.default(this);
        this._checkSubscriptionStatus = new checkSubscriptionStatus_1.default(this);
    }
    CreateRecurringSubscription(requestPayload) {
        requestPayload.publicKey = this.client.config.publicKey;
        return getJsonResponse_1.default(this._createSubscription, requestPayload, { isTokenRequired: true, isPost: true });
    }
    ChargeRecurringSubscription(requestPayload) {
        requestPayload.publicKey = this.client.config.publicKey;
        return getJsonResponse_1.default(this._chargeSubscription, requestPayload, { isTokenRequired: true, isPost: true });
    }
    UpdateRecurringSubscription(requestPayload) {
        requestPayload.publicKey = this.client.config.publicKey;
        return getJsonResponse_1.default(this._updateSubscription, requestPayload, { isTokenRequired: true });
    }
    GetSubscriptions(requestPayload = {}) {
        requestPayload.query = this.client.config.publicKey;
        return getJsonResponse_1.default(this._getSubscriptions, requestPayload, { isTokenRequired: true, isPost: false });
    }
    GetCustomerSubscriptions(requestPayload) {
        requestPayload.publicKey = this.client.config.publicKey;
        requestPayload.query = this.client.config.publicKey + "/customerId/" + requestPayload.customerId;
        return getJsonResponse_1.default(this._getSubscriptions, requestPayload, { isTokenRequired: true, isPost: false });
    }
    CheckSubscriptionStatus(requestPayload) {
        requestPayload.publicKey = this.client.config.publicKey;
        requestPayload.query = requestPayload.billingId;
        return getJsonResponse_1.default(this._checkSubscriptionStatus, requestPayload, { isTokenRequired: true, isPost: false });
    }
}
exports.default = Recurrent;
//# sourceMappingURL=recurrent.js.map