import Client from "../client";
import Service from "../service";
declare class Card extends Service {
    private readonly _authorizePreAuth;
    private readonly _capturePreAuth;
    private readonly _cancelPreAuth;
    private readonly _refundPreAuth;
    private readonly _tokenizeCard;
    constructor(client: Client);
    AuthorizePreAuth(requestPayload: ICard.AuthorizePreAuthRequest): Promise<ICard.Response>;
    AuthorizePreAuthWithToken(requestPayload: ICard.AuthorizePreAuthRequestWithToken): Promise<ICard.Response>;
    CapturePreAuth(requestPayload: ICard.CapturePreAuthRequest): Promise<ICard.Response>;
    CancelPreAuth(requestPayload: ICard.CancelPreAuthRequest): Promise<ICard.Response>;
    RefundPreAuth(requestPayload: ICard.RefundPreAuthRequest): Promise<ICard.Response>;
    Tokenize(requestPayload: ICard.TokenizeCardRequest): Promise<ICard.Response>;
}
export default Card;
